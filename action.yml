name: 'Deployment'
description: 'Deploys Docker container or static website to TFSO environment'
outputs:
  deploymenturl:
    description: 'The url of the deployment, can be used for successive calls to the deploymentapi'
inputs:
  image_name:
    required: false
    description: 'Specify explicit image name instead of using service name'
  deployment_token:
    description: 'Authorization token that is used to authenticate against the Deployment API'
    required: true
  service_name: 
    description: 'Name of the Rancher service to upgrade, _must_ start with tfso. (match AppVeyor convention)'
    required: true
  team:
    description: 'Name of the team this service belongs to, ie., COLAB'
    required: true
  module: 
    description: 'Name of the module the API or Website is a part of.'
    required: true
  version:
    description: 'Version of the image to upgrade to. Will use tag value if exists and none is entered'
    required: false
  type:
    description: 'How to deploy - website, api or rancher2 '
    required: false
    default: 'api'    
  environment:
    description: 'Deployment environment'
    required: false
    default: 'Development'
  http-endpoint:
    description: 'The url that resolves to the api'
    required: false
  container-port:
    description: 'The port that is exposed in the container'
    required: false
  release-channel:
    required: false
    description: 'Website branches can be release to release channels for easy testing'
    default: 'false'
  healthtest-path:
    required: false
    description: 'Path to health test for container'
    default: '/health'
  healthtest-timeout:
    required: false
    description: 'Timeout after failing test - in seconds'
  healthtest-initialdelay:
    required: false
    description: 'Delay in seconds before initial readiness probing'
  healthtest-period:
    required: false
    description: 'Time in seconds between each test'
  readytest-path:
    required: false
    description: 'Path to ready test for container'
    default: '/ready'
  readytest-command:
    required: false
    description: 'Commands that will be run - test if commands exit with exit code 0 '
  healthtest-command:
    required: false
    description: 'Commands that will be run - test if commands exit with exit code 0 '
  persistent-volumes:
    required: false
    description: 'Setup a persistent volume for the deployment, must be a multi line string with objects'
  volume-mounts:
    required: false
    description: 'Config for mounting volumes to a container in Rancher2, must be a multi line string with objects'
  proxy-buffer-size:
    required: false
    description: 'Max buffer size of the nginx controller ingress (Rancher2)'
  readytest-initialdelay:
    required: false
    description: 'Delay in seconds before initial readiness probing'
  readytest-period:
    required: false
    description: 'Time in seconds between each test'
  dd-service:
    required: true
    description: 'Alternative name for the service - should correspond with the name used in datadog'
  instances:
    required: false
    description: 'Number of instances to start by default'
  secrets_string:
    required: false
    description: 'JSON formatted string with secrets'
  memory-limit:
    required: false
    description: "Memory (MiB) limit for the container (max memory)"
  memory-reservation:
    required: false
    description: "Memory (MiB) reservation for the container (min memory)"
  cpu-limit:
    required: false
    description: "CPU (mCPU) limit for the container (max cpu)"
  cpu-reservation:
    required: false
    description: "CPU (mCPU) reservation for the container (min cpu)"
    
runs:
  using: 'node16'
  main: 'dist/deploy/index.js'